package chapter07;

public class Study08 {
	
	public static void main(String[] args) {

		//제어자(modifier)
		//클래스와 클래스의 멤버(멤버 변수, 메서드)에 부가적인 의미를 부여
		//하나의 대상에 여러 제어자를 같이 사용가능(접근 제어자는 하나만) 접근 제어자를 가장 먼저 사용하는 경향이 있음
		//종류
		//접근 제어자 : public protected, (default), private => 4개 중 1개만
		//그     외 : static, final, abstract, native, transient, synchronized, volatile, strictfp
		
		//static - 클래스의, 공통적인
		//멤버 변수 : 모든 인스턴스에 공통적으로 사용되는 클래스 변수가 됨, 클래스 변수는 인스턴스를 생성하지 않고도 사용 가능, 클래스가 메모리에 로드될 때 생성
		//메서드 : 인스턴스를 생성하지 않고도 호출이 가능한 static 메서드가 됨, static메서드 내에서는 인스턴스 멤버들을 직접 사용할 수 없음
		
		//final - 마지막의, 변경될 수 없는
		//클래스 : 변경될 수 없는 클래스, 확장될 수 없는 클래스가 됨. final로 지정된 클래스는 다른 클래스의 부모(조상)이 될 수 없음. 상속계층도에 가장 아래에 있음. String, Math
		//메서드 : 변경될 수 없는 메서드, final로 지정된 메서드는 오버라이딩을 통해 재정의 불가
		//멤버변수, 지역변수 : 변수 앞에 final이 붙으면, 값을 변경할 수 없는 상수가 됨
		
		//abstract - 추상의, 미완성의
		//추상 클래스를 상속받아서 완전한 클래스(구상 클래스)를 만든 후 객체 생성 가능
		//클래스 : 클래스 내에 추상 메서드가 선언되어 있음을 의미. 추상메서드를 가지고 있다면 추상 클래스. 인스턴스 생성불가
		//메서드 : 선언부만 작성하고 구현부는 작성하지 않은 추상 메서드임을 알림
		
	}

}
