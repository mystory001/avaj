package chapter12;

/**
 * *애너테이션
 * -주석처럼 프로그래밍 언어에 영향을 미치지 않으며, 유용한 정보를 제공
 * -에너테이션 사용의 예
 * @Test //이 메소드가 테스트 대상임을 테스트 프로그램에게 알림. JUnit. 단위 테스트 프로그램
 * public void method(){
 * 	...
 * }
 */

/**
 * *표준 애너테이션
 * -Java에서 제공하는 애너테이션
 * @Override	컴파일러에게 오버라이딩하는 메소드라는 것을 알림
 * @Deprecated	앞으로 사용하지 않을 것을 권장하는 대상에 붙임
 * @SuppressWarnings	컴파일러의 특정 경고메시지가 나타나지 않게 해줌
 * @SafeVarargs	제네릭 타입의 가변인자에 사용
 * @FunctionalInterface	함수형 인터페이스라는 것을 알림
 * @Native	native메소드에서 참조되는 상수 앞에 붙임
 * @Target	애너테이션이 적용가능한 대상을 지정하는데 사용
 * @Documented	애너테이션 정보가 javadoc으로 작성된 문서에 포함되게 함
 * @Inherited	애너테이션이 자손 클래스에 상속되도록 함
 * @Retention	애너테이션이 유지되는 범위를 지정하는데 사용
 * @Repeatable	애너테이션을 반복해서 적용할 수 있게 함
 */


public class Study10 {
	
	public static void main(String[] args) {

		
	}
	
}
